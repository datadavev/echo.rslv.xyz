## Don't forget to edit the hostname - currently set to 'metacat-dev.test.dataone.org'
##
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: echo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: csi-cephfs-sc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
        - name: echo
          image: python:3.11-slim
          workingDir: /app
          command: ["sh", "-c"]
          args:
            - pip install --no-cache-dir -r requirements.txt uvicorn &&
              python -m uvicorn echo.fapi:app --host 0.0.0.0 --port 80
          ports:
            - containerPort: 80
          volumeMounts:
            - name: echo-code
              mountPath: /app
      volumes:
        - name: echo-code
          persistentVolumeClaim:
            claimName: echo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: echo
spec:
  type: ClusterIP
  selector:
    app: echo
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-proxy-headers
data:
  X-Real-IP: "$remote_addr"
  X-Forwarded-For: "$proxy_add_x_forwarded_for"
  X-Forwarded-Proto: "$scheme"
  Host: "$host"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-set-headers: "configmap/echo-proxy-headers"
spec:
  ingressClassName: nginx
  rules:
    - host: &hostname metacat-dev.test.dataone.org
      http:
        paths:
          - path: /echo
            pathType: Prefix
            backend:
              service:
                name: echo
                port:
                  number: 80
  tls:
    - hosts:
        - *hostname
      secretName: ingress-nginx-tls-cert
